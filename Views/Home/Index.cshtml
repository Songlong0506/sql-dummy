@model SqlDummySeeder.Models.TablesSelectionInput
@{
    ViewData["Title"] = "Kết nối & Chọn bảng";
    var saved = (IEnumerable<SqlDummySeeder.Services.SavedConnection>)ViewBag.Saved ?? Enumerable.Empty<SqlDummySeeder.Services.SavedConnection>();
    var savedJson = System.Text.Json.JsonSerializer.Serialize(saved, new System.Text.Json.JsonSerializerOptions { PropertyNamingPolicy = System.Text.Json.JsonNamingPolicy.CamelCase });
}
<div class="card">
  <div class="card-body">
    <div class="d-flex align-items-center justify-content-between">
        <h5 class="card-title mb-0">Kết nối SQL Server</h5>
    </div>

    <div class="alert alert-warning mt-3 py-2 px-3 small">
        Mật khẩu sẽ được lưu <em>plaintext</em> trong máy của bạn tại thư mục AppData\\SqlDummySeeder.
        Vui lòng dùng trên máy cá nhân / môi trường phát triển.
    </div>

    <form asp-action="Index" method="post" class="mt-3">
        <div class="row g-3">
            <div class="col-md-6">
                <label class="form-label">Server Name</label>
                <div class="input-group">
                    <input asp-for="Connection.ServerName" id="serverName" class="form-control" placeholder=".\\SQLEXPRESS hoặc 127.0.0.1" />
                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">Đã lưu</button>
                    <ul class="dropdown-menu dropdown-menu-end" id="savedServersDropdown">
                        <!-- filled by JS -->
                    </ul>
                </div>
            </div>

            <div class="col-md-6">
                <label class="form-label">Authentication</label>
                <select asp-for="Connection.AuthMode" class="form-select" id="authMode">
                    <option value="Windows">Windows Authentication</option>
                    <option value="Sql">SQL Server Authentication</option>
                </select>
            </div>

            <div class="col-md-6" id="sqlUserBox" style="display:none;">
                <label class="form-label">User Name</label>
                <input asp-for="Connection.UserName" id="userName" class="form-control" />
            </div>
            <div class="col-md-6" id="sqlPassBox" style="display:none;">
                <label class="form-label">Password</label>
                <input asp-for="Connection.Password" id="password" type="password" class="form-control" />
            </div>

            <div class="col-md-6">
                <label class="form-label">Database Name</label>
                <div class="input-group">
                    <select asp-for="Connection.DatabaseName" id="dbSelect" class="form-select" disabled="@(string.IsNullOrEmpty(Model.Connection.DatabaseName) ? "" : null)">
                        <option value="">-- chọn database --</option>
                        @if (!string.IsNullOrEmpty(Model.Connection.DatabaseName))
                        {
                            <option value="@Model.Connection.DatabaseName" selected>@Model.Connection.DatabaseName</option>
                        }
                    </select>
                    <button class="btn btn-outline-secondary" type="button" id="btnLoadDb">Load</button>
                </div>
                <div class="form-text" id="dbHelp">Nhập Server + Auth rồi nhấn Load để lấy danh sách DB.</div>
            </div>

        </div>
        @if (!Model.Tables.Any())
        {
        <div class="text-danger mt-3">
            @Html.ValidationSummary()
        </div>
        }
    </form>
  </div>
</div>

@if (Model.Tables.Any())
{
<div id="tablesArea" class="row g-3 mt-4">
  <div class="col-lg-7">
    <div class="card">
      <div class="card-body">
        <h5 class="card-title">Chọn bảng để tạo dữ liệu</h5>
        <div class="d-flex align-items-center gap-2 mb-2">
            <button class="btn btn-sm btn-outline-primary" type="button" id="btnSelectAll">Chọn tất cả</button>
            <button class="btn btn-sm btn-outline-secondary" type="button" id="btnClearAll">Bỏ chọn</button>
            <span class="text-muted ms-auto">Mặc định mỗi bảng 10 bản ghi</span>
        </div>

        <form asp-action="SeedMany" method="post" id="seedForm">
            <input type="hidden" name="Connection.ServerName" value="@Model.Connection.ServerName" />
            <input type="hidden" name="Connection.DatabaseName" value="@Model.Connection.DatabaseName" />
            <input type="hidden" name="Connection.AuthMode" value="@Model.Connection.AuthMode" />
            <input type="hidden" name="Connection.UserName" value="@Model.Connection.UserName" />
            <input type="hidden" name="Connection.Password" value="@Model.Connection.Password" />

            <div class="table-responsive table-fixed border rounded">
              <table class="table table-sm align-middle">
                <thead class="table-light">
                  <tr>
                    <th style="width:48px;">Chọn</th>
                    <th>Schema.Table</th>
                    <th style="width:120px;">Số lượng</th>
                  </tr>
                </thead>
                <tbody>
                @for (int i = 0; i < Model.Tables.Count; i++)
                {
                    <tr>
                      <td>
                        <input class="form-check-input table-check" type="checkbox" name="Tables[@i].Selected" value="true" />
                        <input type="hidden" name="Tables[@i].Selected" value="false" />
                      </td>
                      <td>
                        <input type="hidden" name="Tables[@i].SchemaName" value="@Model.Tables[i].SchemaName" />
                        <input type="hidden" name="Tables[@i].TableName" value="@Model.Tables[i].TableName" />
                        <span class="monospace">@Model.Tables[i].SchemaName.@Model.Tables[i].TableName</span>
                      </td>
                      <td>
                        <input name="Tables[@i].Count" type="number" class="form-control form-control-sm" value="@Model.Tables[i].Count" min="1" />
                      </td>
                    </tr>
                }
                </tbody>
              </table>
            </div>

            <div class="text-danger mt-2">
                @Html.ValidationSummary()
            </div>

            <div class="mt-3 d-flex gap-2">
              <button class="btn btn-success" type="submit">Seed dữ liệu</button>
            </div>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Modal to show seeding result -->
<div class="modal fade" id="seedResultModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Kết quả seed</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="d-flex align-items-center gap-2 text-muted">
          <div class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></div>
          <span>Đang chạy...</span>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
      </div>
    </div>
  </div>
</div>
}
@section Scripts {
<script>
(function(){
    const saved = @Html.Raw(savedJson);
    const dropdown = document.getElementById('savedServersDropdown');
    const serverInput = document.getElementById('serverName');
    const auth = document.getElementById('authMode');
    const u = document.getElementById('userName');
    const p = document.getElementById('password');
    const userBox = document.getElementById('sqlUserBox');
    const passBox = document.getElementById('sqlPassBox');
    const dbSelect = document.getElementById('dbSelect');
    const btnLoad = document.getElementById('btnLoadDb');
    const dbHelp = document.getElementById('dbHelp');
    const connectForm = document.querySelector('form');
    const tablesArea = document.getElementById('tablesArea');

    function toggleAuth(){
        const isSql = auth.value === 'Sql';
        userBox.style.display = isSql ? 'block' : 'none';
        passBox.style.display = isSql ? 'block' : 'none';
    }
    auth.addEventListener('change', toggleAuth);
    toggleAuth();

    function applySaved(sc){
        serverInput.value = sc.serverName || '';
        auth.value = sc.authMode || 'Windows';
        u.value = sc.userName || '';
        p.value = sc.password || '';
        toggleAuth();
        loadDatabases(); // auto-load when choose saved
    }

    function rebuildDropdown(){
        dropdown.innerHTML = '';
        if (!Array.isArray(saved) || saved.length === 0){
            const li = document.createElement('li');
            li.innerHTML = '<span class="dropdown-item-text text-muted">Chưa có server nào</span>';
            dropdown.appendChild(li);
            return;
        }
        saved.forEach(sc => {
            const li = document.createElement('li');
            const a = document.createElement('a');
            a.className = 'dropdown-item';
            a.href = 'javascript:void(0)';
            a.textContent = sc.serverName + (sc.authMode === 'Sql' ? '  (SQL Auth)' : '  (Windows)');
            a.addEventListener('click', () => applySaved(sc));
            li.appendChild(a);
            dropdown.appendChild(li);
        });
    }
    rebuildDropdown();

    async function loadDatabases(){
        const body = {
            serverName: serverInput.value.trim(),
            databaseName: "", // ignored
            authMode: auth.value,
            userName: u.value,
            password: p.value
        };
        if (!body.serverName){
            alert('Nhập Server Name trước.');
            return;
        }
        dbSelect.innerHTML = '<option>Đang tải...</option>';
        dbSelect.disabled = true;
        dbHelp.textContent = 'Đang tải danh sách DB...';

        try {
            const res = await fetch('/Home/ListDatabases', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(body)
            });
            const js = await res.json();
            if (!js.ok){
                dbSelect.innerHTML = '<option value="">-- chọn database --</option>';
                dbHelp.textContent = 'Lỗi: ' + js.error;
                return;
            }
            const list = js.data || [];
            dbSelect.innerHTML = '<option value="">-- chọn database --</option>';
            list.forEach(name => {
                const opt = document.createElement('option');
                opt.value = name;
                opt.textContent = name;
                dbSelect.appendChild(opt);
            });
            dbSelect.disabled = false;
            dbHelp.textContent = 'Chọn một database.';
        } catch (e){
            dbSelect.innerHTML = '<option value="">-- chọn database --</option>';
            dbHelp.textContent = 'Lỗi: ' + e;
        }
    }

    btnLoad.addEventListener('click', loadDatabases);
    serverInput.addEventListener('blur', () => { if (serverInput.value.trim()) loadDatabases(); });

    dbSelect.addEventListener('change', () => {
        if (dbSelect.value){
            connectForm?.submit();
        } else if (tablesArea){
            tablesArea.style.display = 'none';
        }
    });
})();
</script>
@if (Model.Tables.Any())
{
<script>
(function(){
    const btnAll = document.getElementById('btnSelectAll');
    const btnNone = document.getElementById('btnClearAll');
    const checks = () => Array.from(document.querySelectorAll('.table-check'));
    btnAll.addEventListener('click', () => checks().forEach(c => c.checked = true));
    btnNone.addEventListener('click', () => checks().forEach(c => c.checked = false));

    const form = document.getElementById('seedForm');
    const submitBtn = form.querySelector('button[type="submit"]');
    const modalEl = document.getElementById('seedResultModal');
    const modalBody = modalEl.querySelector('.modal-body');
    const modal = new bootstrap.Modal(modalEl);

    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        // Show modal with spinner
        modalBody.innerHTML = '<div class="d-flex align-items-center gap-2 text-muted"><div class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></div><span>Đang chạy...</span></div>';
        modal.show();
        submitBtn.disabled = true;
        try {
            const res = await fetch('/Home/SeedMany', {
                method: 'POST',
                headers: { 'X-Requested-With': 'XMLHttpRequest' },
                body: new FormData(form)
            });
            const html = await res.text();
            modalBody.innerHTML = html;
        } catch (err) {
            modalBody.innerHTML = '<div class="alert alert-danger">Lỗi: ' + err + '</div>';
        } finally {
            submitBtn.disabled = false;
        }
    });
})();
</script>
}
}
