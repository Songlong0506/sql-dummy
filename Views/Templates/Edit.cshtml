@model SqlDummySeeder.Excel.Models.Template
@{
    ViewData["Title"] = "Edit Template";
    var columns = (IEnumerable<SqlDummySeeder.Excel.Models.ColumnDefinition>)ViewBag.Columns;
}
<div class="card card-pad mb-3">
    <div class="d-flex justify-content-between align-items-center mb-2">
        <h4 class="m-0">Edit: @Model.Name</h4>
        <a class="btn-small" asp-action="Index">Back</a>
    </div>

    <form class="form-inline" asp-action="Edit" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="Id" />
        <input asp-for="Name" placeholder="Template name" />
        <button type="submit" class="btn-small btn-ok-soft">Save name</button>
    </form>
</div>

<div class="card card-pad">
    <h5 class="mb-3">Columns</h5>

    <form class="form-inline mb-3" asp-action="AddColumn" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" name="TemplateId" value="@Model.Id" />
        <input type="text" name="Name" placeholder="Column name" required />
        <select name="Mode">
            <option value="FromList">FromList</option>
            <option value="FormatString">FormatString</option>
        </select>
        <button type="submit" class="btn-small btn-ok-soft">Add Column</button>
    </form>

    <div class="table-responsive table-fixed">
        <form id="reorderForm" method="post" asp-action="Reorder">
            @Html.AntiForgeryToken()
            <input type="hidden" name="templateId" value="@Model.Id" />
            <table class="table align-middle">
                <thead>
                    <tr>
                        <th style="width:42px;"></th>
                        <th style="min-width:180px;">Name</th>
                        <th style="min-width:140px;">Mode</th>
                        <th>Config</th>
                        <th style="min-width:100px;"></th>
                    </tr>
                </thead>
                <tbody id="cols">
                    @foreach (var c in columns.OrderBy(c => c.Order))
                    {
                        <tr data-id="@c.Id">
                            <td><span class="drag-handle" title="Drag to reorder">☰</span></td>
                            <td>@c.Name</td>
                            <td>@c.Mode</td>
                            <td>
                                @if (c.Mode == SqlDummySeeder.Excel.Models.ColumnValueMode.FromList)
                                {
                                    <form asp-action="SaveList" method="post" class="d-grid gap-2">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="Id" value="@c.Id" />
                                        <label class="help">Items (mỗi dòng 1 giá trị)</label>
                                        <textarea class="monospace" name="listItemsRaw" rows="4">@c.ListItemsRaw</textarea>
                                        <label class="help">
                                            <input type="checkbox" name="listPickRandom" value="true" @(c.ListPickRandom ? "checked" : "") />
                                            Pick random
                                        </label>
                                        <div><button type="submit" class="btn-small btn-ok-soft">Save</button></div>
                                    </form>
                                }
                                else
                                {
                                    <form asp-action="SaveFormat" method="post" class="d-grid gap-2">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="Id" value="@c.Id" />
                                        <label class="help">Format String</label>
                                        <input type="text" name="formatString" value="@c.FormatString" />
                                        <div class="help">
                                            Tokens:
                                            <code>{i}</code>, <code>{i:000}</code>, <code>{guid}</code>,
                                            <code>{date:yyyy-MM-dd}</code>, <code>{now:HHmmss}</code>,
                                            <code>{rand:100-999}</code>, <code>{pick:A|B|C}</code>
                                        </div>
                                        <div><button type="submit" class="btn-small btn-ok-soft">Save</button></div>
                                    </form>
                                }
                            </td>
                            <td>
                                <form asp-action="DeleteColumn" method="post" onsubmit="return confirm('Delete column?')">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="Id" value="@c.Id" />
                                    <button type="submit" class="btn-small btn-danger-soft">Delete</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </form>
    </div>

    <div class="mt-3">
        <a class="btn-small btn-warn-soft" asp-action="Export" asp-route-id="@Model.Id" asp-route-rows="100">Export 100 rows</a>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.2/Sortable.min.js"></script>
    <script>
        (function() {
          const tbody = document.getElementById('cols');
          const form  = document.getElementById('reorderForm');
          if (!tbody || !form) return;

          new Sortable(tbody, {
            handle: '.drag-handle',
            animation: 150,
            onEnd: () => {
              const ids = Array.from(tbody.querySelectorAll('tr[data-id]'))
                           .map(tr => tr.getAttribute('data-id'));

              // xóa input cũ
              [...form.querySelectorAll('input[name="orderedIds"]')].forEach(e => e.remove());
              // thêm input theo thứ tự mới
              ids.forEach(id => {
                const i = document.createElement('input');
                i.type = 'hidden';
                i.name = 'orderedIds';
                i.value = id;
                form.appendChild(i);
              });

              // submit bằng fetch để không reload trang
              const data = new FormData(form);
              fetch('@Url.Action("Reorder", "Templates")', {
                method: 'POST',
                body: data
              }).catch(console.error);
            }
          });
        })();
    </script>
    <style>
        .drag-handle {
            cursor: grab;
            user-select: none;
            font-size: 18px;
            padding: 6px 10px;
            border: 1px solid var(--border);
            border-radius: 10px;
            background: #fff;
            box-shadow: var(--shadow)
        }

            .drag-handle:active {
                cursor: grabbing
            }
    </style>
}
